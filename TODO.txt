Generators.
* Add the `BorrowRef[T]` and `BorrowMut[T]` types & code generation.

Iterative loops.
* Work with the new generator types.

Encapsulation annotations.
* Add support for method encapsulation (methods map to attributes with $Type right now).
* Overriding functions must keep the same encapsulation level.

Generic types.
* Passing too many generic arguments causes a Python error.

Specialization.
* `sup std::vector::Vec[std::string::Str]` applies to all `std::vector::Vec` types.
* Generic arguments must match their parameters exactly for sup Type[T=T] to work (generic type regeneration)

Function folding.
* Binary and regular function folding.

Equality methods.
* Should all be (&Self, &Self), not (&Self, Self) conventions.
* Change a == b at the compiler level into a == &b.

Smart pointers.
* Attribute access to deferred types

Types.
* Change single tuple type back to (T) not (T, )
* Callables: should be able to call variables that are a function type.
