name: Build, Test & Deploy Documentation

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-docs:
    if: ${{ contains(github.event.head_commit.message, '.md') || contains(github.event.head_commit.message, '.py') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate docs
        run: |
          python generate_docs.py

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs-compiler-sphinx/build/html'

  test:
    if: ${{ contains(github.event.head_commit.message, '.py') }}
    needs: build-docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools

      - name: Set Env
        run: |
          echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV  # Add src to PYTHONPATH
          echo "SHOW_PROGRESS_BARS=0" >> $GITHUB_ENV

      - name: Run tests
        run: |
          python -m unittest discover -s tests
        continue-on-error: true

  deploy:
    needs: build-docs
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
